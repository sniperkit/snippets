// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dht.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	dht.proto

It has these top-level messages:
	Entry
*/
package main

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type SignatureScheme int32

const (
	SignatureScheme_SignatureSchemeUnknown SignatureScheme = 0
	SignatureScheme_ES256                  SignatureScheme = 1
	SignatureScheme_ES384                  SignatureScheme = 2
	SignatureScheme_ES512                  SignatureScheme = 3
	SignatureScheme_RS256                  SignatureScheme = 9
	SignatureScheme_RS384                  SignatureScheme = 10
	SignatureScheme_RS512                  SignatureScheme = 11
)

var SignatureScheme_name = map[int32]string{
	0:  "SignatureSchemeUnknown",
	1:  "ES256",
	2:  "ES384",
	3:  "ES512",
	9:  "RS256",
	10: "RS384",
	11: "RS512",
}
var SignatureScheme_value = map[string]int32{
	"SignatureSchemeUnknown": 0,
	"ES256":                  1,
	"ES384":                  2,
	"ES512":                  3,
	"RS256":                  9,
	"RS384":                  10,
	"RS512":                  11,
}

func (x SignatureScheme) String() string {
	return proto.EnumName(SignatureScheme_name, int32(x))
}
func (SignatureScheme) EnumDescriptor() ([]byte, []int) { return fileDescriptorDht, []int{0} }

type Entry struct {
	DeviceID  []byte          `protobuf:"bytes,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Key       []byte          `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Signature []byte          `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	Scheme    SignatureScheme `protobuf:"varint,4,opt,name=scheme,proto3,enum=main.SignatureScheme" json:"scheme,omitempty"`
}

func (m *Entry) Reset()                    { *m = Entry{} }
func (m *Entry) String() string            { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()               {}
func (*Entry) Descriptor() ([]byte, []int) { return fileDescriptorDht, []int{0} }

func (m *Entry) GetDeviceID() []byte {
	if m != nil {
		return m.DeviceID
	}
	return nil
}

func (m *Entry) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Entry) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Entry) GetScheme() SignatureScheme {
	if m != nil {
		return m.Scheme
	}
	return SignatureScheme_SignatureSchemeUnknown
}

func init() {
	proto.RegisterType((*Entry)(nil), "main.Entry")
	proto.RegisterEnum("main.SignatureScheme", SignatureScheme_name, SignatureScheme_value)
}

func init() { proto.RegisterFile("dht.proto", fileDescriptorDht) }

var fileDescriptorDht = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0xc9, 0x28, 0xd1,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x4d, 0xcc, 0xcc, 0x93, 0xd2, 0x4d, 0xcf, 0x2c,
	0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0xcf, 0x4f, 0xcf, 0xd7, 0x07, 0x4b, 0x26,
	0x95, 0xa6, 0x81, 0x79, 0x60, 0x0e, 0x98, 0x05, 0xd1, 0xa4, 0xd4, 0xc4, 0xc8, 0xc5, 0xea, 0x9a,
	0x57, 0x52, 0x54, 0x29, 0x24, 0xc5, 0xc5, 0x91, 0x92, 0x5a, 0x96, 0x99, 0x9c, 0xea, 0xe9, 0x22,
	0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x13, 0x04, 0xe7, 0x0b, 0x09, 0x70, 0x31, 0x67, 0xa7, 0x56, 0x4a,
	0x30, 0x81, 0x85, 0x41, 0x4c, 0x21, 0x19, 0x2e, 0xce, 0xe2, 0xcc, 0xf4, 0xbc, 0xc4, 0x92, 0xd2,
	0xa2, 0x54, 0x09, 0x66, 0xb0, 0x38, 0x42, 0x40, 0x48, 0x97, 0x8b, 0xad, 0x38, 0x39, 0x23, 0x35,
	0x37, 0x55, 0x82, 0x45, 0x81, 0x51, 0x83, 0xcf, 0x48, 0x54, 0x0f, 0xe4, 0x36, 0xbd, 0x60, 0x98,
	0x82, 0x60, 0xb0, 0x64, 0x10, 0x54, 0x91, 0xd6, 0x46, 0x46, 0x2e, 0x7e, 0x34, 0x39, 0x21, 0x29,
	0x2e, 0x31, 0x34, 0xa1, 0xd0, 0xbc, 0xec, 0xbc, 0xfc, 0xf2, 0x3c, 0x01, 0x06, 0x21, 0x11, 0x2e,
	0x56, 0xd7, 0x60, 0x23, 0x53, 0x33, 0x01, 0x46, 0x29, 0xce, 0xae, 0xb9, 0x0a, 0x10, 0x0e, 0x44,
	0xd4, 0xd8, 0xc2, 0x44, 0x80, 0x09, 0x26, 0x6a, 0x6c, 0x61, 0x02, 0x11, 0x35, 0x35, 0x34, 0x12,
	0x60, 0x86, 0x89, 0x9a, 0x1a, 0x1a, 0x81, 0x44, 0x83, 0xc0, 0x26, 0x70, 0x42, 0x44, 0x83, 0x60,
	0x26, 0x04, 0x81, 0x4d, 0xe0, 0x82, 0x89, 0x42, 0x4d, 0x08, 0x02, 0x9b, 0xc0, 0x0d, 0x13, 0x35,
	0x35, 0x34, 0x4a, 0x62, 0x03, 0x87, 0x9f, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xef, 0x9c, 0x71,
	0x8a, 0x81, 0x01, 0x00, 0x00,
}
